{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRouter.js","router/PublicRouter.js","router/AppRouter.js","reducer/authReducer.js","reducer/calendarReducer.js","reducer/uiReducer.js","reducer/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdate","eventDeleted","eventLoaded","chekingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","value","setValue","reset","handleInputChange","target","name","LoginScreen","useDispatch","lEmail","lPassword","formLoginValue","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValue","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","endDate","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValue","setFormValue","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","startAccessor","endAccessor","eventPropGetter","backgroundColor","borderRadius","opacity","display","color","components","view","PrivateRouter","isAuthenticated","Component","component","rest","props","to","PublicRouter","AppRouter","cheking","exact","path","checking","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76fd8449.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\n\nexport const fetchSinToken = (endpoint, data, method = 'GET') => {\n    const url = `${baseUrl}/${endpoint}`;\n\n    if(method === 'GET'){\n        return fetch(url);\n    }else{\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n    }\n}\n\nexport const fetchConToken = (endpoint, data, method = 'GET') => {\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem('token') || '';\n\n    if(method === 'GET'){\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    }else{\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        });\n    }\n}","\nexport const types = {\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Logout event',\n\n    eventStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add New',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdate: '[event] Event update',\n    eventDeleted: '[event] Event Deleted',\n    eventLoaded: '[event] Events loaded',\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start Login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout'\n}","import moment from \"moment\"\n\n\nexport const prepareEvents = (events = []) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment(e.end).toDate(),\n            start: moment(e.start).toDate(),\n        })\n    );\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = (event) => {\n    return async(dispatch, getState) => {\n        \n        const {uid, name} = getState();\n\n        try {\n            \n            const resp = await fetchConToken('event', event, 'POST');\n            const body = await resp.json();\n\n            if(body.ok){\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n\n                dispatch(eventAddNew(event));\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n});\n\nexport const eventStartUpdate = (event) => {\n    return async(dispatch) => {\n        try {\n\n            const resp = await fetchConToken(`event/${event.id}`, event, 'PUT');\n            const body = await resp.json()\n            \n            if(body.ok){\n                dispatch(eventUpdate(event));\n            } else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\n\nconst eventUpdate = (event) => ({\n    type: types.eventUpdate,\n    payload: event,\n});\n\nexport const eventStartDelete = () => {\n    return async(dispatch, getState) => {\n\n        const {id} = getState().calendar.activeEvent;\n\n        try {\n\n            const resp = await fetchConToken(`event/${id}`, {}, 'DELETE');\n            const body = await resp.json()\n            \n            if(body.ok){\n                dispatch(eventDeleted());\n            } else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\n\nconst eventDeleted = () => ({\n    type: types.eventDeleted\n});\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n        try {\n            \n            const resp = await fetchConToken('event');\n            const body = await resp.json();\n\n            const events = prepareEvents(body.eventos);\n\n            dispatch(eventLoaded(events));\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventLoaded = (event) => ({\n    type: types.eventLoaded,\n    payload: event\n});\n\nexport const eventLogout = () =>({\n    type: types.eventLogout\n});","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { eventLogout } from \"./events\";\n\n\nexport const startLogin = (email, password) => {\n    return async (dispatch) => {\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n    }\n}\n\nexport const startRegister = (email, password, name) => {\n    return async (dispatch) => {\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n    }\n}\n\nexport const startCheking = () => {\n    return async (dispatch) => {\n        \n        const resp = await fetchConToken('auth/renew');\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            dispatch(chekingFinish());\n        }\n    }\n}\n\nconst chekingFinish = () => ({\n    type: types.authCheckingFinish\n});\n\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(eventLogout());\n        dispatch(logout());\n    }\n}\n\nconst logout = () => ({\n    type: types.authLogout\n});","import { useState } from \"react\"\n\nexport const useForm = (initialState = {}) => {\n    const [value, setValue] = useState(initialState);\n\n    const reset = () =>{\n        setValue(initialState);\n    }\n\n    const handleInputChange = ({target}) =>{\n        setValue({\n            ...value,\n            [target.name]: target.value\n        });\n    }\n\n    return [value, handleInputChange, reset];\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    \n    const [formLoginValue, handleLoginInputChange] = useForm({\n        lEmail: 'david@gmail.com',\n        lPassword: '123456'\n    });\n\n    const [formRegisterValue, handleRegisterInputChange] = useForm({\n        rName: 'Cati',\n        rEmail: 'cati@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456'\n    });\n\n    const {lEmail, lPassword} = formLoginValue;\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValue;\n\n    const hanldeLogin = (e) =>{\n        e.preventDefault();\n        \n        dispatch(startLogin(lEmail,lPassword));\n    }\n\n    const handleRegister = (e) =>{\n        e.preventDefault();\n\n        if(rPassword1 !== rPassword2){\n            return Swal.fire('Error','Las contraseñas no coinciden', 'error');\n        }\n\n        dispatch(startRegister(rEmail,rPassword1,rName));\n    }\n    \n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={hanldeLogin}>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={lPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                value={rName}\n                                name=\"rName\"\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                value={rEmail}\n                                name=\"rEmail\"\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                value={rPassword1}\n                                name=\"rPassword1\"\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                value={rPassword2}\n                                name=\"rPassword2\"\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n\n    const {name} = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\"> \n                {name}\n            </span>\n\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user} = event;\n\n    return (\n        <div>\n            <strong> {title} </strong>\n            <strong> - {user.name} </strong>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\n\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/events';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst endDate = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: endDate.toDate()\n}\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector(state => state.ui)\n    const { activeEvent } = useSelector(state => state.calendar)\n\n    const dispatch = useDispatch();\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(endDate.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n\n    const [formValue, setFormValue] = useState(initEvent);\n\n    const { notes, title, start, end } = formValue;\n\n\n    useEffect(() => {\n        \n        if(activeEvent){\n            setFormValue(activeEvent)\n        }else{\n            setFormValue(initEvent)\n        }\n\n    }, [activeEvent, setFormValue])\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValue({\n            ...formValue,\n            [target.name]: target.value\n        })\n    }\n\n    const closeModal = () => {\n        dispatch(uiCloseModal())\n        dispatch(eventClearActiveEvent())\n        setFormValue(initEvent)\n    }\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValue({\n            ...formValue,\n            start: e\n        })\n    }\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setFormValue({\n            ...formValue,\n            end: e\n        })\n    }\n\n    const hanldeSubmitForm = (e) => {\n        e.preventDefault();\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            return Swal.fire('Error', 'La fecha debe de ser mayor a la fecha de Inicio', 'error');\n        }\n\n        if (title.trim().length < 2) {\n            return setTitleValid(false)\n        }\n\n        if(activeEvent){\n            dispatch(eventStartUpdate(formValue))\n        } else {\n            dispatch(eventStartAddNew(formValue));\n        }\n\n        setTitleValid(true);\n        closeModal();\n\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent) ? 'Editar Evento' : 'Nuevo Evento'} </h1>\n            <hr />\n            <form className=\"container\" onSubmit={hanldeSubmitForm}>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        minDate={dateStart}\n                        value={dateEnd}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        value={title}\n                        onChange={handleInputChange}\n                        autoComplete=\"off\"\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch(uiOpenModal())\n    }\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={handleClickNew}\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch(eventStartDelete())\n    }\n\n    return (\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\n             <i className=\"fas fa-trash\"></i>\n             <span> Delete</span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\nimport moment from 'moment'\nimport 'moment/locale/es'\n\nimport { Navbar } from '../ui/Navbar'\nimport { messages } from '../../helpers/calendar-messages-es'\nimport { CalendarEvent } from './CalendarEvent'\nimport { CalendarModal } from './CalendarModal'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui'\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events'\nimport { AddNewFab } from '../ui/AddNewFab'\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\n\nexport const CalendarScreen = () => {\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month');\n    const dispatch = useDispatch();\n\n    const {events, activeEvent} = useSelector(state => state.calendar);\n    const {uid} = useSelector(state => state.auth);\n\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch])\n\n    const onDoubleClick = (e) => {\n        dispatch(uiOpenModal()); \n    }\n\n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e))\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e)\n        localStorage.setItem('lastView', e)\n    }\n\n    const eventStyleGetter = (event) => {\n        const style = {\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n        return{\n            style\n        }\n    }\n\n    const onSelectSlot = (e) => {\n        dispatch(eventClearActiveEvent())\n    }\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n            <Calendar\n                localizer={localizer}\n                events={events}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                onSelectSlot={onSelectSlot}\n                selectable={true}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages= {messages}\n                eventPropGetter={eventStyleGetter}\n                components={{\n                    event: CalendarEvent\n                }}\n                view={lastView}\n            />\n\n            <AddNewFab/>\n\n            {\n                (activeEvent) && <DeleteEventFab/>\n            }\n            \n            <CalendarModal/>\n            \n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRouter = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest} \n            component={(props) => (\n                (isAuthenticated)\n                    ? (<Component {...props}/>)\n                    : (<Redirect to=\"/login\" />)    \n            )}\n        />\n    )\n}\n\nPrivateRouter.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PublicRouter = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return ( \n        <Route {...rest} \n            component={(props) => (\n                (!isAuthenticated)\n                    ? (<Component {...props}/>)\n                    : (<Redirect to=\"/\" />)    \n            )}\n        />\n    )\n}\n\nPublicRouter.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\nimport { startCheking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRouter } from './PrivateRouter';\nimport { PublicRouter } from './PublicRouter';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { cheking, uid } = useSelector(state => state.auth)\n\n    useEffect(() => {\n        dispatch(startCheking());\n    }, [dispatch])\n\n    if (cheking) {\n        return (<h5>Espere...</h5>);\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n\n                    <PublicRouter\n                        exact\n                        path=\"/login\"\n                        component={LoginScreen}\n                        isAuthenticated={!!uid}\n                    />\n\n                    <PrivateRouter\n                        exact\n                        path=\"/\"\n                        component={CalendarScreen}\n                        isAuthenticated={!!uid}\n                    />\n\n                    <Redirect to=\"/\" />\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                checking: false,\n                ...action.payload\n            }\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n        case types.authLogout:\n            return{\n                checking: false\n            }\n        default:\n            return state;\n    }\n}","import { types } from '../types/types';\n// {\n//     id: 'daskdnjlskadnf',\n//     title: 'Cumple años de ella',\n//     start: moment().toDate(),\n//     end: moment().add(2, 'hours').toDate(),\n//     notes: 'Comprar la fafa',\n//     user: {\n//         id: 1234,\n//         name: 'Messi'\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n}\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n        case types.eventUpdate:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => (e.id === action.payload.id) ? action.payload : e\n                )\n            }\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => (e.id !== state.activeEvent.id)\n                ),\n                activeEvent: null\n            }\n        case types.eventLoaded:\n            return{\n                ...state,\n                events: [...action.payload]\n            }\n        case types.eventLogout:\n            return{\n                ...initialState\n            }\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false\n}\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n            case types.uiCloseModal:\n                return {\n                    ...state,\n                    modalOpen: false\n                }\n               \n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n    //faltan mas\n})","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducer/rootReducer\";\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n","import React from 'react'\nimport {Provider} from 'react-redux'\nimport { AppRouter } from './router/AppRouter'\nimport { store } from './store/store'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store = {store}>\n            <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './style.css'\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}